<lsf>

    <!-- configuracoes globais -->
    <globals>

        <!-- a declaração dos atributos deste bloco e' obrigatoria -->

        <background r="ff" g="ff" b="ff" a="ff" />

        <!-- Configuracao de desenho de poligonos e shading -->
        <!-- Valores para mode: "fill", "line", "point" -->
        <!-- Valores para shading: "flat", "gouraud") -->
        <polygon mode="ss" shading="ss" />

        <!-- Configuracao de culling -->
        <!-- Valores para frontfaceorder: "CCW") ou "CW" -->
        <!-- Valores para cullface: "back", "front" ou "both" -->
        <culling frontfaceorder="ss" cullface="ss" enabled="tt" />
    </globals>


    <!-- informacao de camaras: o atributo "initial" identifica a camara/ponto de vista inicial -->
    <cameras initial="ss" >
        <!-- tem de existir, pelo menos uma camara dos tipos seguintes (perspective ou ortho) -->

        <perspective id="ss" near="ff" far="ff" angle="ff">
            <from x="ff" y="ff" z="ff" />
            <to x="ff" y="ff" z="ff" />
        </perspective>

        <ortho id="ss" near="ff" far="ff" left="ff" right="ff" top="ff" bottom="ff" />

    </cameras>
  

    <!-- informacao geral de iluminacao; segue os parametros do OpenGL -->
    <lighting doublesided="tt" local="tt" enabled="tt" >
        luz ambiente da cena<!--  -->
        <ambient r="ff" g="ff" b="ff" a="ff" />

        <!-- informacao de fontes de luz -->
        <lights>
            <!-- Deve existir um ou mais blocos "light" -->
            <!-- Os identificadores "id" nao podem ser repetidos -->
            <light id="ss" enabled="tt">
                <location x="ff" y="ff" z="ff" />
                <ambient r="ff" g="ff" b="ff" a="ff" />
                <diffuse r="ff" g="ff" b="ff" a="ff" />
                <specular r="ff" g="ff" b="ff" a="ff" />

                <!-- No caso de uma ser uma spotlight, incluir os dados abaixo; se for uma omnilight, omitir -->
                <spot angle="ff" exponent="ff" dirx="ff" diry="ff" dirz="ff" />
            </light>

        </lights>

    </lighting>

    <!-- informacao de materiais; -->
    <appearances>
        <!-- deve existir um ou mais blocos "appearance" -->
        <appearance id="ss" >
            <emissive r="ff" g="ff" b="ff" a="ff" />
            <ambient r="ff" g="ff" b="ff" a="ff" />
            <diffuse r="ff" g="ff" b="ff" a="ff" />
            <specular r="ff" g="ff" b="ff" a="ff" />
            <shininess value="ff" />

            <!-- informacao opcional de textura (ver nota no enunciado sobre os parametros length_... -->
            <texture file="ss" length_s="ff" length_t="ff" />
 
        </appearance>
    </appearances>

    <!-- informacao do grafo; "rootid" identifica o no de raiz -->
    <graph rootid="ss">

        <!-- tem de existir, pelo menos, um bloco "node" -->
        <node id="ss">
            <!-- bloco "transforms" obrigatorio -->
            <transforms>
                <!-- deve conter transformacoes explicitas usando as instrucoes seguintes sem limite nem ordem -->
                <!-- ex: bloco transforms pode ficar sem conteudo -->
                <!-- ex: bloco transforms pode ser R,T (não tem S) -->
                <!-- ex: bloco transforms pode ser R,S,T,S -->
                <translate x="ff" y="ff" z="ff" />
                <rotate axis="ee" angle="ff" />
                <scale x="ff" y="ff" z="ff" />
            </transforms>
          
            <!-- declaracao obrigatoria de aparencia a utilizar: -->
            <!-- se id="inherit", mantem (herda) a aparencia recebida do "pai" -->
            <!-- se não, a aparencia declarada sobrepoe a recebida do "pai" -->

            <appearanceref id="ss" />
                              
            <!-- bloco "children" obrigatorio -->
            <children>

                <!-- deve existir no minimo uma primitiva, ou uma referencia a outros elementos previamente definidos -->
                <!-- podem existir varias primitivas e/ou referencias a componentes previamente definidos -->

                <!-- Primitivas : rectangle, triangle, cylinder, sphere, torus -->
                <!--   Comandos a serem interpretados genericamente como em OpenGL/GLUT, exceto -->
                <!--   o cilindro, que deve adicionalmente ter topos) -->            
                <rectangle x1="ff" y1="ff" x2="ff" y2="ff" />
                <triangle x1="ff" y1="ff" z1="ff" x2="ff" y2="ff" z2="ff" x3="ff" y3="ff" z3="ff" />
                <cylinder base="ff" top="ff" height="ff" slices="ii" stacks="ii" />      <!-- deve ter topos -->
                <sphere radius="ff" slices="ii" stacks="ii" />
                <torus inner="ff" outer="ff" slices="ii" loops="ii" />
               
                <!--  Referencia a outros elementos do grafo -->
                <noderef id="ss" />

            </children>
        </node>
    </graph>
</lsf>
